# secure-app/secret-management.yaml
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: secure-app-demo
  annotations:
    # This tells Argo CD to ignore drift for this resource
    argocd.argoproj.io/compare-options: IgnoreExtraneous
type: Opaque
stringData:
  # These can be managed externally or via SealedSecrets/ExternalSecrets
  database-url: "postgresql://localhost:5432/secureapp"
  api-key: "initial-key-will-be-replaced"
  jwt-secret: "initial-jwt-secret"
---
# Example of using Kubernetes External Secrets (if installed)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aws-secrets
  namespace: secure-app-demo
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secret-store
    kind: SecretStore
  target:
    name: aws-credentials
    creationPolicy: Owner
  data:
  - secretKey: access-key
    remoteRef:
      key: production/secure-app
      property: access-key
  - secretKey: secret-key
    remoteRef:
      key: production/secure-app
      property: secret-key