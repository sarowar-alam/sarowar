events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # API endpoints that execute scripts
        location /start-load {
            # Execute the start load script
            add_header Content-Type application/json;
            return 200 '{"status":"starting","message":"CPU load starting in background"}';
        }

        location /stop-load {
            # Execute the stop load script
            add_header Content-Type application/json;
            return 200 '{"status":"stopping","message":"Stopping CPU load"}';
        }

        location /cpu-info {
            add_header Content-Type application/json;
            return 200 "{\"cores\":\"$(nproc)\",\"arch\":\"$(uname -m)\",\"load\":\"$(cat /proc/loadavg | cut -d' ' -f1)\"}";
        }

        # Real CPU load endpoint (this will actually generate load)
        location /real-start-load {
            # This endpoint will actually start CPU load in background
            add_header Content-Type application/json;
            
            # Start stress-ng in background (this is a hacky way to do it from nginx)
            content_by_lua_block {
                os.execute("stress-ng --cpu " .. tonumber(io.popen("nproc"):read("*a")) .. " --cpu-method matrixprod --timeout 300s > /dev/null 2>&1 &")
                ngx.say('{"status": "started", "message": "Real CPU load started"}')
            }
        }

        location /real-stop-load {
            add_header Content-Type application/json;
            content_by_lua_block {
                os.execute("pkill stress-ng")
                ngx.say('{"status": "stopped", "message": "CPU load stopped"}')
            }
        }

        # Health check endpoint
        location /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Serve static files
        location / {
            try_files $uri $uri/ =404;
        }
    }
}