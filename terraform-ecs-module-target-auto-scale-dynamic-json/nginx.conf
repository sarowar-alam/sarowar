events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Custom server block for load testing endpoints
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # CPU load endpoints
        location /start-load {
            default_type application/json;
            add_header Content-Type application/json;
            
            # Start stress-ng in background to consume 100% CPU
            return 200 '{"pid":"$pid","status":"started"}';
            content_by_lua_block {
                local shell = require "resty.shell"
                local ok, stdout, stderr, reason, status = shell.run([[/bin/sh -c "stress-ng --cpu 0 --cpu-method matrixprod --timeout 300s > /dev/null 2>&1 & echo $!"]])
                ngx.say('{"pid":"' .. stdout:gsub("%s+", "") .. '","status":"started"}')
            }
        }

        location /stop-load {
            default_type application/json;
            add_header Content-Type application/json;
            content_by_lua_block {
                ngx.req.read_body()
                local args = ngx.req.get_post_args()
                if args and args.pid then
                    os.execute("kill -9 " .. args.pid .. " 2>/dev/null")
                else
                    os.execute("pkill stress-ng 2>/dev/null")
                end
                ngx.say('{"status":"stopped"}')
            }
        }

        location /cpu-info {
            default_type application/json;
            add_header Content-Type application/json;
            content_by_lua_block {
                local shell = require "resty.shell"
                local ok, cores = shell.run([[/bin/sh -c "nproc"]])
                local ok, arch = shell.run([[/bin/sh -c "uname -m"]])
                ngx.say('{"cores":"' .. cores:gsub("%s+", "") .. '","arch":"' .. arch:gsub("%s+", "") .. '"}')
            }
        }

        # Serve static files
        location / {
            try_files $uri $uri/ =404;
        }
    }
}