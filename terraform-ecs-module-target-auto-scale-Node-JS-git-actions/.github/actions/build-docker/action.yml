name: "Build and Push Docker Image"
description: "Build Docker image and push to ECR"

inputs:
  aws-region:
    description: "AWS region"
    required: true
    default: "ap-south-1"
  ecr-repo-name:
    description: "ECR repository name"
    required: true
  image-tag:
    description: "Docker image tag"
    required: true
    default: "latest"
  project-dir:
    description: "Project directory"
    required: true
    default: "."

outputs:
  image-uri:
    description: "Full ECR image URI"
    value: ${{ steps.push-image.outputs.image-uri }}

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      shell: bash
      run: |
        cd ${{ inputs.project-dir }}
        docker build -t ${{ inputs.ecr-repo-name }}:${{ inputs.image-tag }} .

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Create ECR repository if not exists
      shell: bash
      run: |
        aws ecr describe-repositories --repository-names ${{ inputs.ecr-repo-name }} || \
        aws ecr create-repository \
          --repository-name ${{ inputs.ecr-repo-name }} \
          --image-scanning-configuration scanOnPush=true \
          --image-tag-mutability MUTABLE

    - name: Push image to Amazon ECR
      id: push-image
      shell: bash
      run: |
        docker tag ${{ inputs.ecr-repo-name }}:${{ inputs.image-tag }} ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo-name }}:${{ inputs.image-tag }}
        docker tag ${{ inputs.ecr-repo-name }}:${{ inputs.image-tag }} ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo-name }}:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo-name }}:${{ inputs.image-tag }}
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo-name }}:latest
        echo "image-uri=${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr-repo-name }}:${{ inputs.image-tag }}" >> $GITHUB_OUTPUT
