backend\package.json
====================
{
  "name": "backend-app",
  "version": "1.0.0",
  "main": "server.js",
  "dependencies": {
    "express": "^4.18.2"
  }
}



backend\server.js
=================
const express = require('express');
const app = express();
const port = 3000;

app.get('/api/health', (req, res) => {
    res.json({ status: 'OK', message: 'Backend service is running' });
});

app.get('/api/data', (req, res) => {
    res.json({ data: 'Hello from backend API!', timestamp: new Date().toISOString() });
});

app.listen(port, '0.0.0.0', () => {
    console.log(`Backend service running on port ${port}`);
});



combine.ps1
===========
# Get current directory
$currentDir = Get-Location
$outputFile = "combined_files.txt"
$extensions = @("*.*", "*.yaml")

if (Test-Path $outputFile) {
    Remove-Item $outputFile
}

$files = Get-ChildItem -Path $currentDir -Recurse -File -Include $extensions
$totalFiles = $files.Count
$counter = 0

# Create a string builder to collect all content
$combinedContent = [System.Text.StringBuilder]::new()

foreach ($file in $files) {
    $counter++
    $percentComplete = ($counter / $totalFiles) * 100
    Write-Progress -Activity "Processing Files" -Status "Processing $($file.Name) ($counter of $totalFiles)" -PercentComplete $percentComplete
    
    $relativePath = $file.FullName.Substring($currentDir.Path.Length + 1)
    [void]$combinedContent.AppendLine($relativePath)
    [void]$combinedContent.AppendLine("=" * $relativePath.Length)
    
    try {
        $content = Get-Content -Path $file.FullName -Raw
        [void]$combinedContent.AppendLine($content)
    }
    catch {
        $errorMsg = "[Error reading file: $($_.Exception.Message)]"
        [void]$combinedContent.AppendLine($errorMsg)
    }
    
    [void]$combinedContent.AppendLine()
    [void]$combinedContent.AppendLine()
}

# Write all content to file at once
try {
    $combinedContent.ToString() | Out-File -FilePath $outputFile -Encoding UTF8
    Write-Host "Combined file created: $outputFile" -ForegroundColor Green
    Write-Host "Total files processed: $totalFiles" -ForegroundColor Green
}
catch {
    Write-Host "Error writing to output file: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Progress -Activity "Processing Files" -Completed


docker-compose.yml
==================
version: '3.8'
services:
  nginx-app:
    image: my-nginx-app
    build: .
    ports:
      - "80:80"
    restart: unless-stopped
    container_name: my-nginx-service
    depends_on:
      - backend-app
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  backend-app:
    image: my-backend-app
    build:
      context: ./backend    # â† Make sure this points to backend directory
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: my-backend-service
    environment:
      - NODE_ENV=production
      - PORT=3000
    expose:
      - "3000"



index.nginx-debian.html
=======================
<!DOCTYPE html>
<html>
<head>
    <title>Nginx + Backend App</title>
</head>
<body>
    <h1>Frontend served by Nginx</h1>
    <button onclick="fetchData()">Test Backend API</button>
    <div id="result"></div>

    <script>
        async function fetchData() {
            try {
                const response = await fetch('/api/data');
                const data = await response.json();
                document.getElementById('result').innerHTML = JSON.stringify(data);
            } catch (error) {
                console.error('Error:', error);
            }
        }
    </script>
</body>
</html>



nginx.conf
==========
events {
    worker_connections 1024;
}

http {
    upstream backend {
        server backend-app:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Proxy API requests to backend - PRESERVE the /api prefix
        location /api/ {
            proxy_pass http://backend/api/;  # â† Add /api/ here
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve static files from Nginx
        location / {
            root /var/www/html;
            index index.nginx-debian.html;
            try_files $uri $uri/ =404;
        }
    }
}



