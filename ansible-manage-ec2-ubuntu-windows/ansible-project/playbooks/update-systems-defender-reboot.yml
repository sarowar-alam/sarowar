---
- name: Update Ubuntu servers
  hosts: ubuntu_servers
  become: true
  tasks:
    - name: Gather package list before upgrade
      command: dpkg -l
      register: ubuntu_packages_before

    - name: Save package list before upgrade
      copy:
        content: "{{ ubuntu_packages_before.stdout }}"
        dest: "~/{{ inventory_hostname }}-packages-before.txt"

    - name: Clean apt cache (fix GPG/lock issues)
      command: apt-get clean
      changed_when: false

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Upgrade packages
      apt:
        upgrade: dist
        autoremove: yes
        autoclean: yes
      environment:
        DEBIAN_FRONTEND: noninteractive
      register: ubuntu_upgrade_result

    - name: Show Ubuntu updates summary in console
      debug:
        var: ubuntu_upgrade_result

    - name: Gather package list after upgrade
      command: dpkg -l
      register: ubuntu_packages_after

    - name: Save package list after upgrade
      copy:
        content: "{{ ubuntu_packages_after.stdout }}"
        dest: "~/{{ inventory_hostname }}-packages-after.txt"

    - name: Save Ubuntu upgrade summary
      copy:
        content: "{{ ubuntu_upgrade_result | to_nice_json }}"
        dest: "~/{{ inventory_hostname }}-updates.json"

    - name: Reboot Ubuntu server if required
      reboot:
        msg: "System is rebooting after updates"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
      when: ubuntu_upgrade_result is changed


- name: Update Windows servers
  hosts: windows_servers
  become: false
  tasks:
    - name: Gather installed software via registry
      win_shell: |
        Get-ItemProperty HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* |
        Select-Object DisplayName, DisplayVersion, Publisher, InstallDate |
        ConvertTo-Json -Compress
      register: installed_software

    - name: Ensure log directory exists
      win_file:
        path: C:\ansible_logs
        state: directory

    - name: Save software list (raw JSON, no escape parsing)
      copy:
        content: "{{ installed_software.stdout | string }}"
        dest: "C:/ansible_logs/{{ inventory_hostname }}-packages.json"

    - name: Install all available Windows updates
      win_updates:
        reboot: yes
      register: win_update_result

    - name: Show Windows updates summary in console
      debug:
        var: win_update_result

    - name: Save Windows updates log
      copy:
        content: "{{ win_update_result | to_nice_json }}"
        dest: "C:/ansible_logs/{{ inventory_hostname }}-updates.json"

    - name: Update Microsoft Defender signatures
      win_shell: |
        Update-MpSignature
      register: defender_update
      failed_when: defender_update.rc not in [0,1]

    - name: Show Defender update result in console
      debug:
        var: defender_update.stdout

    - name: Save Defender update result
      copy:
        content: "{{ defender_update.stdout }}"
        dest: "C:/ansible_logs/{{ inventory_hostname }}-defender-update.log"
